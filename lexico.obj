TOK_INT	Entero
TOK_IDENT	a
TOK_ASSIGN	=
TOK_NUM	5
TOK_COMMA	,
TOK_IDENT	b
TOK_COMMA	,
TOK_IDENT	c
TOK_ASSIGN	=
TOK_NUM	2
TOK_SEMI	;
TOK_PRINT	Imprimir
TOK_LPAREN	(
TOK_IDENT	a
TOK_PLUS	+
TOK_IDENT	c
TOK_RPAREN	)
TOK_SEMI	;
TOK_IDENT	b
TOK_ASSIGN	=
TOK_IDENT	a
TOK_MULT	*
TOK_IDENT	c
TOK_PLUS	+
TOK_NUM	1
TOK_SEMI	;
TOK_PRINT	Imprimir
TOK_LPAREN	(
TOK_IDENT	b
TOK_RPAREN	)
TOK_SEMI	;
TOK_READ	Leer
TOK_LPAREN	(
TOK_IDENT	b
TOK_RPAREN	)
TOK_SEMI	;
TOK_IF	Si
TOK_LPAREN	(
TOK_IDENT	b
TOK_GT	>
TOK_NUM	0
TOK_RPAREN	)
TOK_LBRACE	{
TOK_PRINT	Imprimir
TOK_LPAREN	(
TOK_IDENT	b
TOK_RPAREN	)
TOK_SEMI	;
TOK_RBRACE	}
TOK_ELSE	Sino
TOK_LBRACE	{
TOK_PRINT	Imprimir
TOK_LPAREN	(
TOK_NUM	0
TOK_RPAREN	)
TOK_SEMI	;
TOK_RBRACE	}
TOK_INT	Entero
TOK_IDENT	i
TOK_ASSIGN	=
TOK_NUM	3
TOK_SEMI	;
TOK_WHILE	Mientras
TOK_LPAREN	(
TOK_IDENT	i
TOK_GT	>
TOK_NUM	0
TOK_RPAREN	)
TOK_LBRACE	{
TOK_PRINT	Imprimir
TOK_LPAREN	(
TOK_IDENT	i
TOK_RPAREN	)
TOK_SEMI	;
TOK_IDENT	i
TOK_ASSIGN	=
TOK_IDENT	i
TOK_MINUS	-
TOK_NUM	1
TOK_SEMI	;
TOK_RBRACE	}
TOK_NUM	42
TOK_EOF	EOF
