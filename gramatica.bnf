<programa>        ::= <lista_sentencias> EOF

<lista_sentencias> ::= <sentencia> <lista_sentencias>
                     | ε

<sentencia>       ::= <declaracion>
                    | <imprimir>
                    | <leer>
                    | <asignacion>
                    | <condicional>
                    | <mientras>
                    | <bloque>

<declaracion>     ::= <tipo> <lista_variables> ';'
<tipo>            ::= 'Entero' | 'Caracter' | 'Flotante' | 'var' | 'const' | 'items' | 'item'
<lista_variables> ::= <decl_var> ( ',' <decl_var> )*
<decl_var>        ::= IDENT [ '=' <expresion> ]

<imprimir>        ::= 'Imprimir' '(' <expresion> ')' ';'
                   | 'Imprimir' '(' CADENA ')' ';'
                   | 'Imprimir' '{' CADENA '}' ';'
                   | 'Imprimir' '{' IDENT  '}' ';'
<leer>            ::= 'Leer' '(' IDENT ')' ';'

<asignacion>      ::= IDENT '=' <expresion> ';'

<condicional>     ::= 'Si' '(' <expresion> ')' <sentencia> [ 'Sino' <sentencia> ]
<mientras>        ::= 'Mientras' '(' <expresion> ')' <sentencia>

<bloque>          ::= '{' <lista_sentencias> '}'

<expresion>       ::= <exp_relacional>

<exp_relacional>  ::= <exp_suma> ( ( '==' | '!=' | '<' | '>' | '<=' | '>=' ) <exp_suma> )*
<exp_suma>        ::= <exp_mul> ( ( '+' | '-' ) <exp_mul> )*
<exp_mul>         ::= <exp_pot> ( ( '*' | '/' | '%' ) <exp_pot> )*
<exp_pot>         ::= <exp_unaria> ( '^' <exp_unaria> )*
<exp_unaria>      ::= [ '-' ] <primaria>
<primaria>        ::= '(' <expresion> ')'
                     | NUM
                     | IDENT
                     | CADENA

// Tokens léxicos (definiciones de “átomos”):
IDENT            ::= (Letra) (Letra | Dígito)*
NUM              ::= (Dígito)+
CADENA           ::= '"' (cualquier caracter sin '"')* '"'
Letra           ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' |
                    'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' |
                    'u' | 'v' | 'w' | 'x' | 'y' | 'z' |
                    'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' |
                    'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' |
                    'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'

// Palabras reservadas:
'Entero', 'Caracter', 'Flotante', 'Imprimir', 'Leer', 'Si', 'Sino', 'Mientras', 'var', 'const', 'items', 'item'

// Símbolos simples:
','   → TOK_COMMA
';'   → TOK_SEMI
'('   → TOK_LPAREN
')'   → TOK_RPAREN
'{'   → TOK_LBRACE
'}'   → TOK_RBRACE

// Operadores y comparadores:
'='   → TOK_ASSIGN   (si aparece “==” → TOK_EQ)
'=='  → TOK_EQ
'!='  → TOK_NEQ
'<'   → TOK_LT
'<='  → TOK_LE
'>'   → TOK_GT
'>='  → TOK_GE

'+'   → TOK_PLUS
'-'   → TOK_MINUS
'*'   → TOK_MULT
'/'   → TOK_DIV
'%'   → TOK_MOD
'^'   → TOK_POW

CADENA         → TOK_STRING

EOF              → TOK_EOF
Cualquier otro carácter no reconocido → TOK_UNKNOWN
